{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/CommentsContainer.js\";\nimport React, { Component } from 'react';\nimport CommentInput from '../components/songs/CommentInput';\nimport Comment from '../components/comments/Comment';\nimport { connect } from 'react-redux';\n\nclass CommentsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderComments = () => this.props.comments.map((comment, id) => React.createElement(Comment, {\n      key: id,\n      text: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(CommentInput, {\n      addComment: this.props.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      comments: this.props.comments,\n      deleteComment: this.props.deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.renderComments);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  comments: state.props\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addComment: name => dispatch({\n    type: \"ADD_COMMENT\",\n    name\n  }),\n  deleteComment: id => dispatch({\n    type: \"DELETE_COMMENT\",\n    id\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/CommentsContainer.js"],"names":["React","Component","CommentInput","Comment","connect","CommentsContainer","renderComments","props","comments","map","comment","id","render","addComment","deleteComment","mapStateToProps","state","mapDispatchToProps","dispatch","name","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAetCK,cAfsC,GAerB,MAAM,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,CAACC,OAAD,EAAUC,EAAV,KAC3C,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,EADT;AAEI,MAAA,IAAI,EAAED,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB,CAfe;AAAA;;AACtCE,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWM,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAA9B;AACI,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWO,aAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AASH;;AASDF,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,cADV,CADJ;AAKH;;AA3BqC;;AA8B1C,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAACR,EAAAA,QAAQ,EAAEQ,KAAK,CAACT;AAAjB,CAAL,CAA7B;;AACA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,UAAU,EAAEM,IAAI,IAAID,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,aAAP;AAAsBD,IAAAA;AAAtB,GAAD,CADQ;AAEpCL,EAAAA,aAAa,EAAEH,EAAE,IAAIO,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,gBAAP;AAAyBT,IAAAA;AAAzB,GAAD;AAFO,CAAL,CAAnC;;AAMA,eAAeP,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CommentInput from '../components/songs/CommentInput';\nimport Comment from '../components/comments/Comment';\nimport { connect } from 'react-redux';\n\nclass CommentsContainer extends Component {\n    render() {\n        \n        return(\n            <div>\n                <CommentInput addComment={this.props.addComment}\n                />\n                <Comment comments={this.props.comments} \n                    deleteComment={this.props.deleteComment}\n                />\n            </div>\n        )\n    }\n\n\n    renderComments = () => this.props.comments.map((comment, id) => \n        <Comment \n            key={id} \n            text={comment} \n        />)\n\n    render() {\n        return(\n            <div>\n                {this.renderComments}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({comments: state.props })\nconst mapDispatchToProps = dispatch => ({\n    addComment: name => dispatch({type: \"ADD_COMMENT\", name }),\n    deleteComment: id => dispatch({type: \"DELETE_COMMENT\", id})\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer)"]},"metadata":{},"sourceType":"module"}