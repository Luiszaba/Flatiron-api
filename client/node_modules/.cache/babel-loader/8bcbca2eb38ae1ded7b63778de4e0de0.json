{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/CommentsContainer.js\";\nimport React, { Component } from 'react';\nimport CommentInput from '../components/comments/CommentInput';\nimport Comments from '../components/comments/Comments';\nimport { fetchComments } from '../actions/CommentActions';\nimport { connect } from 'react-redux';\n\nclass CommentsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchComments();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(CommentInput, {\n      addComment: this.props.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Comments\",\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Comments, {\n      comments: this.props.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addComment: name => dispatch({\n    type: \"ADD_COMMENT\",\n    name\n  }),\n  fetchComments: () => {\n    dispatch(fetchComments());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/CommentsContainer.js"],"names":["React","Component","CommentInput","Comments","fetchComments","connect","CommentsContainer","componentDidMount","props","render","addComment","comment","id","comments","mapStateToProps","state","mapDispatchToProps","dispatch","name","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAEtCM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,aAAX;AACH;;AAIDK,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AACI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEC,OAAO,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CANJ,CADJ;AAcH;;AAxBqC;;AA2B1C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAE7B,SAAO;AAAEF,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AAAlB,GAAP;AACH,CAHD;;AAKA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,UAAU,EAAEQ,IAAI,IAAID,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,aAAP;AAAsBD,IAAAA;AAAtB,GAAD,CADQ;AAEpCd,EAAAA,aAAa,EAAE,MAAM;AAAEa,IAAAA,QAAQ,CAACb,aAAa,EAAd,CAAR;AAA2B;AAFd,CAAL,CAAnC;;AAMA,eAAeC,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CommentInput from '../components/comments/CommentInput';\nimport Comments from '../components/comments/Comments';\nimport { fetchComments } from '../actions/CommentActions'\nimport { connect } from 'react-redux';\n\nclass CommentsContainer extends Component {\n\n    componentDidMount(){\n        this.props.fetchComments()\n    }\n\n    \n\n    render() {\n        \n        return(\n            <div>\n                <div className=\"CommentInput\">\n                <CommentInput \n                    addComment={this.props.addComment}\n                />\n                </div>\n                <div className=\"Comments\" key={comment.id}>\n                <Comments \n                    comments={this.props.comments} \n                />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return { comments: state.comments} \n}\n\nconst mapDispatchToProps = dispatch => ({\n    addComment: name => dispatch({type: \"ADD_COMMENT\", name }),\n    fetchComments: () => { dispatch(fetchComments()) }\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer)"]},"metadata":{},"sourceType":"module"}