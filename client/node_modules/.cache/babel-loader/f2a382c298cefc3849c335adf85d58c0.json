{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/Flatiron-client/src/containers/SongsContainer.js\";\nimport React, { Component } from 'react';\nimport SongInput from '../components/songs/SongInput';\nimport Song from '../components/songs/Songs';\nimport { connect } from 'react-redux';\n\nclass SongsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSongs = () => {\n      this.props.songs.map((song, id) => React.createElement(Song, {\n        key: id,\n        text: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.renderSongs);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(SongInput, {\n      addSong: this.props.addSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(Song, {\n      songs: this.props.songs,\n      deleteSong: this.props.deleteSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  songs: state.props\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addSong: name => dispatch({\n    type: \"ADD_SONG\",\n    name\n  }),\n  deleteSong: id => dispatch({\n    type: \"DELETE_SONG\",\n    id\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsContainer);","map":{"version":3,"sources":["/home/luiszaba/Flatiron-client/src/containers/SongsContainer.js"],"names":["React","Component","SongInput","Song","connect","SongsContainer","renderSongs","props","songs","map","song","id","render","addSong","deleteSong","mapStateToProps","state","mapDispatchToProps","dispatch","name","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAiBnCK,WAjBmC,GAiBrB,MAAM;AAAC,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,EAAP,KACtC,oBAAC,IAAD;AACI,QAAA,GAAG,EAAEA,EADT;AAEI,QAAA,IAAI,EAAED,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB;AAKjB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,WADV,CADJ;AAKH,KA3BkC;AAAA;;AACnCM,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KADtB;AAEI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWO,UAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAWH;;AAdkC;;AA8BvC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAACR,EAAAA,KAAK,EAAEQ,KAAK,CAACT;AAAd,CAAL,CAA7B;;AACA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,OAAO,EAAEM,IAAI,IAAID,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,UAAP;AAAmBD,IAAAA;AAAnB,GAAD,CADW;AAEpCL,EAAAA,UAAU,EAAEH,EAAE,IAAIO,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,aAAP;AAAsBT,IAAAA;AAAtB,GAAD;AAFU,CAAL,CAAnC;;AAMA,eAAeP,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport SongInput from '../components/songs/SongInput';\nimport Song from '../components/songs/Songs';\nimport { connect } from 'react-redux';\n\nclass SongsContainer extends Component {\n    render() {\n        \n        return(\n            <div>\n                <SongInput \n                    addSong={this.props.addSong}\n                />\n                <Song \n                    songs={this.props.songs} \n                    deleteSong={this.props.deleteSong}\n                />\n            </div>\n        )\n    }\n\n\n    renderSongs = () => {this.props.songs.map((song, id) => \n        <Song \n            key={id} \n            text={song} \n        />)\n        return(\n            <div>\n                {this.renderSongs}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({songs: state.props })\nconst mapDispatchToProps = dispatch => ({\n    addSong: name => dispatch({type: \"ADD_SONG\", name }),\n    deleteSong: id => dispatch({type: \"DELETE_SONG\", id})\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsContainer)\n\n"]},"metadata":{},"sourceType":"module"}