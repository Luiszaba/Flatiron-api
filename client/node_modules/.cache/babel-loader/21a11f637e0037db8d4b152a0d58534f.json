{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/songs/SongInput.js\";\nimport React, { Component } from 'react';\nimport SongService from './services/SongService';\nimport { connect } from 'react-redux';\n\nclass SongInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addSong = song => {\n      SongService.createSong(song).then(song => this.setState({\n        songs: this.state.songs.concat(song)[0]\n      }));\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.addSong(this.state.name);\n      this.setState({\n        title: '',\n        artist: '',\n        genre: '',\n        legnth: ''\n      });\n    };\n\n    this.state = {\n      title: '',\n      artist: '',\n      genre: '',\n      legnth: ''\n    };\n  }\n\n  componentDidMount() {\n    SongService.fetchSongs().then(songs => this.setState({\n      songs\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.handleOnSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"song_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"song_artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Artist:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"artist\",\n      value: this.state.artist,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"song_genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Genre:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"genre\",\n      value: this.state.genre,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"song_length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Song Legnth:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"legnth\",\n      value: this.state.legnth,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSong: formData => dispatch({\n      type: 'ADD_SONG',\n      payload: formData\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SongInput);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/songs/SongInput.js"],"names":["React","Component","SongService","connect","SongInput","constructor","props","addSong","song","createSong","then","setState","songs","state","concat","handleOnChange","event","target","name","value","handleOnSubmit","preventDefault","title","artist","genre","legnth","componentDidMount","fetchSongs","render","mapDispatchToProps","dispatch","formData","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SongService from './services/SongService'\nimport { connect } from 'react-redux';\n\n\nclass SongInput extends Component {\n    constructor(props){\n    super(props)\n        this.state = {\n            title: '',\n            artist: '',\n            genre: '',\n            legnth: ''\n        };\n    }\n    \n    componentDidMount() {\n        SongService.fetchSongs()\n        .then(songs => \n          this.setState({songs}))\n      }\n    \n      addSong = song => { \n        SongService.createSong(song)\n        .then(song => \n          this.setState({ \n            songs: this.state.songs.concat(song)[0] \n        }))\n    }\n\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleOnSubmit = event  => {\n        event.preventDefault();\n        this.props.addSong(this.state.name)\n        this.setState({\n            title: '',\n            artist: '',\n            genre: '',\n            legnth: ''\n        })\n    };\n\n    render() {\n        return(\n            <div className=\"form\">\n                <form onSubmit={event => this.handleOnSubmit(event)} >\n                    \n                    <p>\n                    <label htmlFor=\"song_title\">Title:</label>\n                    <input \n                    type=\"text\"\n                    name=\"title\" \n                    value={this.state.title}\n                    onChange={this.handleOnChange}\n                    />\n                    </p>\n\n                    <p>\n                    <label htmlFor=\"song_artist\">Artist:</label>\n                    <input \n                    type=\"text\"\n                    name=\"artist\" \n                    value={this.state.artist}\n                    onChange={this.handleOnChange}\n                    />\n                    </p>\n\n                    <p>\n                    <label htmlFor=\"song_genre\">Genre:</label>\n                    <input \n                    type=\"text\"\n                    name=\"genre\" \n                    value={this.state.genre}\n                    onChange={this.handleOnChange}\n                    />\n                    </p>\n\n                    <p>\n                    <label htmlFor=\"song_length\">Song Legnth:</label>\n                    <input \n                    type=\"text\"\n                    name=\"legnth\" \n                    value={this.state.legnth}\n                    onChange={this.handleOnChange}\n                    />\n                    </p>\n\n                    <input type=\"submit\" value=\"Add Song\" />\n                </form>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addSong: formData => dispatch({type: 'ADD_SONG', payload: formData})\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SongInput);\n\n\n"]},"metadata":{},"sourceType":"module"}