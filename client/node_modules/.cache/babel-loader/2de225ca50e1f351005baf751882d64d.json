{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/comments/CommentInput.js\";\nimport React, { Component } from 'react';\nimport CommentService from '../../services/CommentService';\nimport { connect } from 'react-redux';\n\nclass CommentInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: ''\n    };\n\n    this.handleOnChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.addComment(this.state);\n      this.setState({\n        comment: ''\n      });\n    };\n\n    this.addComment = comment => {\n      CommentService.createComment(comment).then(comment => this.setState({\n        comments: this.state.comments.concat(comment)[0]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    CommentService.fetchComments().then(comments => this.setState({\n      comments\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.handleOnSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Add Comment \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"comment\",\n      value: this.state.text,\n      onChange: event => this.handleOnChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: formData => dispatch({\n      type: 'ADD_COMMENT',\n      payload: formData\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CommentInput);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/comments/CommentInput.js"],"names":["React","Component","CommentService","connect","CommentInput","state","comment","handleOnChange","event","target","name","value","setState","handleOnSubmit","preventDefault","props","addComment","createComment","then","comments","concat","componentDidMount","fetchComments","render","text","mapDispatchToProps","dispatch","formData","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACJC,MAAAA,OAAO,EAAE;AADL,KADyB;;AAAA,SAMjCC,cANiC,GAMhBC,KAAK,IAAI;AAAA,4BACEA,KAAK,CAACC,MADR;AAAA,YACdC,IADc,iBACdA,IADc;AAAA,YACRC,KADQ,iBACRA,KADQ;AAEtB,WAAKC,QAAL,CAAc;AACV,SAACF,IAAD,GAAQF,KAAK,CAACC,MAAN,CAAaE;AADX,OAAd;AAGH,KAXgC;;AAAA,SAajCE,cAbiC,GAahBL,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKX,KAA3B;AACA,WAAKO,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAnBgC;;AAAA,SA2BjCU,UA3BiC,GA2BpBV,OAAO,IAAI;AACpBJ,MAAAA,cAAc,CAACe,aAAf,CAA6BX,OAA7B,EACCY,IADD,CACMZ,OAAO,IACX,KAAKM,QAAL,CAAc;AACZO,QAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc,QAAX,CAAoBC,MAApB,CAA2Bd,OAA3B,EAAoC,CAApC;AADE,OAAd,CAFF;AAKH,KAjCgC;AAAA;;AAqBjCe,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,cAAc,CAACoB,aAAf,GACCJ,IADD,CACMC,QAAQ,IACZ,KAAKP,QAAL,CAAc;AAACO,MAAAA;AAAD,KAAd,CAFF;AAGD;;AAUHI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAEf,KAAK,IAAI,KAAKK,cAAL,CAAoBL,KAApB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,SAFL;AAGA,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWmB,IAHlB;AAIA,MAAA,QAAQ,EAAEhB,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ;AAgBH;;AApDgC;;AAqDpC;;AAED,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHV,IAAAA,UAAU,EAAEW,QAAQ,IAAID,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAEF;AAA/B,KAAD;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCrB,YAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CommentService from '../../services/CommentService'\nimport { connect } from 'react-redux';\n\nclass CommentInput extends Component {\n    state = {\n        comment: ''\n    };\n    \n\n    handleOnChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: event.target.value\n        });\n    };\n\n    handleOnSubmit = event => {\n        event.preventDefault()\n        this.props.addComment(this.state)\n        this.setState({\n            comment: ''\n        })\n    };\n\n    componentDidMount() {\n        CommentService.fetchComments()\n        .then(comments => \n          this.setState({comments}))\n      }\n\n    addComment = comment => { \n        CommentService.createComment(comment)\n        .then(comment => \n          this.setState({ \n            comments: this.state.comments.concat(comment)[0] \n        }))\n    }\n\n    render() {\n        return(\n            <div className=\"form\">\n                <form onSubmit={event => this.handleOnSubmit(event)} >\n                    <p>\n                    <label> Add Comment </label>\n                        <input\n                        type=\"text\"\n                        name=\"comment\"\n                        value={this.state.text}\n                        onChange={event => this.handleOnChange(event)}\n                        />\n                    </p>\n                    <input type=\"submit\"/>\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addComment: formData => dispatch({type: 'ADD_COMMENT', payload: formData})\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(CommentInput)"]},"metadata":{},"sourceType":"module"}