{"ast":null,"code":"import _objectSpread from \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default function songsReducer(state = {\n  loading: false,\n  songs: []\n}, action) {\n  switch (action.type) {\n    case 'LOADING_SONGS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_SONGS':\n      return {\n        loading: false,\n        songs: [...action.payload]\n      };\n\n    case \"ADD_SONG\":\n      return _objectSpread({}, state, {\n        songs: [...state.songs, action.payload]\n      });\n\n    case \"DELETE_SONG\":\n      return {\n        songs: state.song.filter(comment => comment.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}\n;","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs.js"],"names":["songsReducer","state","loading","songs","action","type","payload","song","filter","comment","id"],"mappings":";AAAA,eAAe,SAASA,YAAT,CAAuBC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,KAAX;AAC1CC,EAAAA,KAAK,EAAE;AADmC,CAA/B,EACEC,MADF,EACW;AAEtB,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAK,eAAL;AACI,+BAAYJ,KAAZ;AAAmBC,QAAAA,OAAO,EAAE;AAA5B;;AAEJ,SAAK,aAAL;AACI,aAAO;AAAEA,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAE,CAAC,GAAGC,MAAM,CAACE,OAAX;AAAzB,OAAP;;AAEJ,SAAK,UAAL;AACI,+BAAYL,KAAZ;AAAmBE,QAAAA,KAAK,EAAE,CAAE,GAAGF,KAAK,CAACE,KAAX,EAAkBC,MAAM,CAACE,OAAzB;AAA1B;;AAEJ,SAAK,aAAL;AACI,aAAO;AAACH,QAAAA,KAAK,EAAEF,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACM,EAApD;AAAR,OAAP;;AAEJ;AACI,aAAOT,KAAP;AAfJ;;AAgBC;AACJ;AAAA","sourcesContent":["export default function songsReducer( state = { loading: false, \n    songs: [] }, action ) {\n    \n    switch (action.type) {\n    \n    case 'LOADING_SONGS':\n        return { ...state, loading: true };\n    \n    case 'FETCH_SONGS': \n        return { loading: false, songs: [...action.payload ] };\n    \n    case \"ADD_SONG\":\n        return { ...state, songs: [ ...state.songs, action.payload ] };\n\n    case \"DELETE_SONG\":\n        return {songs: state.song.filter( comment => comment.id !== action.id )}\n\n    default:\n        return state;\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}