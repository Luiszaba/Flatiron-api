{"ast":null,"code":"import _objectSpread from \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport cuid from 'cuid';\nimport { combineReducers } from 'redux';\nexport const cuidFn = cuid;\nconst rootReducer = combineReducers({});\nexport default function manageSongs(state = {\n  songs: [],\n  comments: []\n}, action) {\n  switch (action.type) {\n    case 'ADD_SONG':\n      const song = {\n        text: action.text,\n        id: cuidFn()\n      };\n      return _objectSpread({}, state, {\n        songs: [...state.songs, song]\n      });\n\n    case 'DELETE_SONG':\n      const songs = state.songs.filter(song => song.id !== action.id);\n      return _objectSpread({}, state, {\n        songs\n      });\n\n    case 'ADD_COMMENT':\n      const comment = {\n        text: action.text,\n        id: cuidFn()\n      };\n      return _objectSpread({}, state, {\n        comments: [...state.comment, comment]\n      });\n\n    case 'REMOVE_COMMENT':\n      const comments = state.comments.filter(comment => comment.id !== action.id);\n      return _objectSpread({}, state, {\n        comments\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs.js"],"names":["cuid","combineReducers","cuidFn","rootReducer","manageSongs","state","songs","comments","action","type","song","text","id","filter","comment"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,eAAR,QAA+B,OAA/B;AACA,OAAO,MAAMC,MAAM,GAAGF,IAAf;AAEP,MAAMG,WAAW,GAAGF,eAAe,CAAC,EAAD,CAAnC;AAIA,eAAe,SAASG,WAAT,CAAsBC,KAAK,GAAG;AAEzCC,EAAAA,KAAK,EAAE,EAFkC;AAGzCC,EAAAA,QAAQ,EAAE;AAH+B,CAA9B,EAKXC,MALW,EAKH;AACR,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAK,UAAL;AACI,YAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAAf;AAAqBC,QAAAA,EAAE,EAAEV,MAAM;AAA/B,OAAb;AACA,+BAAWG,KAAX;AACIC,QAAAA,KAAK,EAAE,CAAE,GAAGD,KAAK,CAACC,KAAX,EAAkBI,IAAlB;AADX;;AAIJ,SAAK,aAAL;AACI,YAAMJ,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYO,MAAZ,CAAmBH,IAAI,IACjCA,IAAI,CAACE,EAAL,KAAYJ,MAAM,CAACI,EADT,CAAd;AAEA,+BAAYP,KAAZ;AAAmBC,QAAAA;AAAnB;;AAEJ,SAAK,aAAL;AACI,YAAMQ,OAAO,GAAG;AAACH,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,QAAAA,EAAE,EAAEV,MAAM;AAA9B,OAAhB;AACA,+BAAWG,KAAX;AACIE,QAAAA,QAAQ,EAAE,CAAC,GAAGF,KAAK,CAACS,OAAV,EAAmBA,OAAnB;AADd;;AAGJ,SAAK,gBAAL;AACI,YAAMP,QAAQ,GAAGF,KAAK,CAACE,QAAN,CAAeM,MAAf,CAAsBC,OAAO,IAC1CA,OAAO,CAACF,EAAR,KAAeJ,MAAM,CAACI,EADT,CAAjB;AAEA,+BAAWP,KAAX;AAAkBE,QAAAA;AAAlB;;AAEA;AACA,aAAOF,KAAP;AAxBJ;AA0BH","sourcesContent":["import cuid from 'cuid';\nimport {combineReducers } from 'redux';\nexport const cuidFn = cuid;\n\nconst rootReducer = combineReducers({\n    \n})\n\nexport default function manageSongs( state = {\n    \n    songs: [],\n    comments: [],\n\n},  action) {\n    switch (action.type) {\n\n    case 'ADD_SONG':\n        const song = { text: action.text, id: cuidFn() }\n        return {...state, \n            songs: [ ...state.songs, song ] \n        }\n\n    case 'DELETE_SONG':\n        const songs = state.songs.filter(song => \n            song.id !== action.id)\n        return { ...state, songs }\n\n    case 'ADD_COMMENT':\n        const comment = {text: action.text, id: cuidFn() }\n        return {...state,\n            comments: [...state.comment, comment]}\n    \n    case 'REMOVE_COMMENT':\n        const comments = state.comments.filter(comment => \n            comment.id !== action.id)\n        return {...state, comments }\n\n        default: \n        return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}