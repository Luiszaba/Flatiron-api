{"ast":null,"code":"import _objectSpread from \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nconst rootReducer = combineReducers({\n  songs: songsReducer,\n  comments: commentsReducer\n});\n\nfunction songsReducer(state = {\n  loading: false,\n  songs: []\n}, action) {\n  let idx;\n\n  switch (action.type) {\n    case 'LOAD_SONGS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_SONGS':\n      return {\n        loading: false,\n        songs: [...action.payload]\n      };\n\n    case \"ADD_SONG\":\n      return [...state, action.song];\n\n    case \"DELETE_SONG\":\n      idx = state.indexOf(action.id);\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\n\n    default:\n      return state;\n  }\n\n  ;\n}\n\n;\n\nfunction commentsReducer(state = {\n  loading: false,\n  comments: []\n}, action) {\n  let idx;\n\n  switch (action.type) {\n    case 'LOAD_COMMENTS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_COMMENTS':\n      return {\n        loading: false,\n        comment: [...action.payload]\n      };\n\n    case \"ADD_COMMENT\":\n      return [...state, action.comment];\n\n    case \"REMOVE_COMMENT\":\n      idx = state.indexOf(action.id);\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs_Comments.js"],"names":["combineReducers","rootReducer","songs","songsReducer","comments","commentsReducer","state","loading","action","idx","type","payload","song","indexOf","id","slice","comment"],"mappings":";AAAA,SAAQA,eAAR,QAA+B,OAA/B;AAGA,MAAMC,WAAW,GAAGD,eAAe,CAAC;AAChCE,EAAAA,KAAK,EAAEC,YADyB;AAEhCC,EAAAA,QAAQ,EAAEC;AAFsB,CAAD,CAAnC;;AAMA,SAASF,YAAT,CAAuBG,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,KAAX;AAAkBL,EAAAA,KAAK,EAAE;AAAzB,CAA/B,EAA8DM,MAA9D,EAAuE;AACnE,MAAIC,GAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEA,SAAK,YAAL;AACI,+BAAWJ,KAAX;AAAkBC,QAAAA,OAAO,EAAE;AAA3B;;AAEJ,SAAK,aAAL;AACI,aAAO;AAAEA,QAAAA,OAAO,EAAE,KAAX;AAAkBL,QAAAA,KAAK,EAAE,CAAC,GAAGM,MAAM,CAACG,OAAX;AAAzB,OAAP;;AAEJ,SAAK,UAAL;AACI,aAAO,CAAC,GAAGL,KAAJ,EAAWE,MAAM,CAACI,IAAlB,CAAP;;AAEJ,SAAK,aAAL;AACIH,MAAAA,GAAG,GAAGH,KAAK,CAACO,OAAN,CAAcL,MAAM,CAACM,EAArB,CAAN;AACA,aAAO,CAAE,GAAGR,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeN,GAAf,CAAL,EAA0B,GAAGH,KAAK,CAACS,KAAN,CAAYN,GAAG,GAAE,CAAjB,CAA7B,CAAP;;AAEJ;AACI,aAAOH,KAAP;AAhBJ;;AAiBC;AACJ;;AAAA;;AAED,SAASD,eAAT,CAA0BC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,KAAX;AAAkBH,EAAAA,QAAQ,EAAE;AAA5B,CAAlC,EAAoEI,MAApE,EAA4E;AACxE,MAAIC,GAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AAEA,SAAK,eAAL;AACI,+BAAWJ,KAAX;AAAkBC,QAAAA,OAAO,EAAE;AAA3B;;AAEJ,SAAK,gBAAL;AACI,aAAO;AAAEA,QAAAA,OAAO,EAAE,KAAX;AAAkBS,QAAAA,OAAO,EAAE,CAAE,GAAGR,MAAM,CAACG,OAAZ;AAA3B,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO,CAAE,GAAGL,KAAL,EAAYE,MAAM,CAACQ,OAAnB,CAAP;;AAEJ,SAAK,gBAAL;AACIP,MAAAA,GAAG,GAAGH,KAAK,CAACO,OAAN,CAAcL,MAAM,CAACM,EAArB,CAAN;AACA,aAAO,CAAE,GAAGR,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeN,GAAf,CAAL,EAA0B,GAAGH,KAAK,CAACS,KAAN,CAAaN,GAAG,GAAG,CAAnB,CAA7B,CAAP;;AAEJ;AACI,aAAOH,KAAP;AAhBJ;AAkBH;;AAED,eAAeL,WAAf","sourcesContent":["import {combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    songs: songsReducer,\n    comments: commentsReducer\n});\n\n\nfunction songsReducer( state = { loading: false, songs: [] }, action ) {\n    let idx;\n    \n    switch (action.type) {\n    \n    case 'LOAD_SONGS':\n        return {...state, loading: true };\n    \n    case 'FETCH_SONGS': \n        return { loading: false, songs: [...action.payload ] };\n    \n    case \"ADD_SONG\":\n        return [...state, action.song ];\n\n    case \"DELETE_SONG\":\n        idx = state.indexOf(action.id);\n        return [ ...state.slice(0, idx), ...state.slice(idx +1 )];\n     \n    default:\n        return state;\n    };\n};\n\nfunction commentsReducer( state = { loading: false, comments: [] }, action ){\n    let idx;\n\n    switch(action.type) {\n    \n    case 'LOAD_COMMENTS':\n        return {...state, loading: true};\n    \n    case 'FETCH_COMMENTS': \n        return { loading: false, comment: [ ...action.payload ] };\n    \n    case \"ADD_COMMENT\":\n        return [ ...state, action.comment ];\n         \n    case \"REMOVE_COMMENT\":\n        idx = state.indexOf(action.id)\n        return [ ...state.slice(0, idx), ...state.slice( idx + 1) ];\n\n    default: \n        return state\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}