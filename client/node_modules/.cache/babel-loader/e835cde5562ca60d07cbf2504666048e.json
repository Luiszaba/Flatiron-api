{"ast":null,"code":"import { combineReducers } from 'redux';\nconst rootReducer = combineReducers({\n  songs: songsReducer,\n  comments: commentsReducer\n});\nexport default rootReducer;\n\nfunction songsReducer(state = [], action) {\n  let idx;\n\n  switch (action.type) {\n    case \"ADD_SONG\":\n      return [...state, action.song];\n\n    case \"DELETE_SONG\":\n      idx = state.indexOf(action.id);\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\n\n    case \"ADD_COMMENT\":\n      let existingSong = state.filter(song);\n      return;\n\n    default:\n      return state;\n  }\n}\n\nfunction commentsReducer(state = [], action) {\n  let idx;\n\n  switch (action.type) {\n    case \"ADD_COMMENT\":\n      return [...state, action.comment];\n\n    case \"REMOVE_COMMENT\":\n      idx = state.indexOf(action.id);\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs_Comments.js"],"names":["combineReducers","rootReducer","songs","songsReducer","comments","commentsReducer","state","action","idx","type","song","indexOf","id","slice","existingSong","filter","comment"],"mappings":"AAAA,SAAQA,eAAR,QAA+B,OAA/B;AAGA,MAAMC,WAAW,GAAGD,eAAe,CAAC;AAChCE,EAAAA,KAAK,EAAEC,YADyB;AAEhCC,EAAAA,QAAQ,EAAEC;AAFsB,CAAD,CAAnC;AAKA,eAAeJ,WAAf;;AAEA,SAASE,YAAT,CAAuBG,KAAK,GAAG,EAA/B,EAAmCC,MAAnC,EAA2C;AACvC,MAAIC,GAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEA,SAAK,UAAL;AACI,aAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACG,IAAlB,CAAP;;AAEJ,SAAK,aAAL;AACIF,MAAAA,GAAG,GAAGF,KAAK,CAACK,OAAN,CAAcJ,MAAM,CAACK,EAArB,CAAN;AACA,aAAO,CAAE,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,GAAf,CAAL,EAA0B,GAAGF,KAAK,CAACO,KAAN,CAAYL,GAAG,GAAE,CAAjB,CAA7B,CAAP;;AAEJ,SAAK,aAAL;AACI,UAAIM,YAAY,GAAIR,KAAK,CAACS,MAAN,CAChBL,IADgB,CAApB;AAGJ;;AAGI;AACA,aAAOJ,KAAP;AAjBJ;AAmBH;;AAED,SAASD,eAAT,CAAyBC,KAAK,GAAE,EAAhC,EAAoCC,MAApC,EAA4C;AACxC,MAAIC,GAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AACA,SAAK,aAAL;AACI,aAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACS,OAAlB,CAAP;;AAEJ,SAAK,gBAAL;AACIR,MAAAA,GAAG,GAAGF,KAAK,CAACK,OAAN,CAAcJ,MAAM,CAACK,EAArB,CAAN;AACA,aAAO,CAAC,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,GAAf,CAAJ,EAAyB,GAAGF,KAAK,CAACO,KAAN,CAAaL,GAAG,GAAG,CAAnB,CAA5B,CAAP;;AAEA;AACA,aAAOF,KAAP;AATJ;AAWH","sourcesContent":["import {combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    songs: songsReducer,\n    comments: commentsReducer\n});\n\nexport default rootReducer\n\nfunction songsReducer( state = [], action) {\n    let idx;\n    \n    switch (action.type) {\n\n    case \"ADD_SONG\":\n        return [...state, action.song ];\n\n    case \"DELETE_SONG\":\n        idx = state.indexOf(action.id);\n        return [ ...state.slice(0, idx), ...state.slice(idx +1 )]\n    \n    case \"ADD_COMMENT\":\n        let existingSong  = state.filter(\n            song\n        )    \n    return \n\n    \n        default:\n        return state\n    }\n}\n\nfunction commentsReducer(state =[], action ){\n    let idx;\n\n    switch(action.type) {\n    case \"ADD_COMMENT\":\n        return [...state, action.comment];\n         \n    case \"REMOVE_COMMENT\":\n        idx = state.indexOf(action.id)\n        return [...state.slice(0, idx), ...state.slice( idx + 1) ];\n\n        default: \n        return state\n    }\n}"]},"metadata":{},"sourceType":"module"}