{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/comments/CommentInput.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: ''\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: 'ADD_COMMENT',\n        payload: this.state\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.handleOnSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Add Comment \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"comment\",\n      value: this.state.text,\n      onChange: event => this.handleOnChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add Comment\")));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSong: formData => dispatch({\n      type: 'ADD_SONG',\n      payload: formData\n    })\n  };\n};\n\nexport default connect(null)(CommentInput);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/components/comments/CommentInput.js"],"names":["React","Component","connect","CommentInput","state","comment","handleOnChange","event","setState","text","target","value","handleOnSubmit","preventDefault","props","dispatch","type","payload","render","mapDispatchToProps","addSong","formData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCG,KADiC,GACzB;AACJC,MAAAA,OAAO,EAAE;AADL,KADyB;;AAAA,SAMjCC,cANiC,GAMhBC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADT,OAAd;AAGH,KAVgC;;AAAA,SAYjCC,cAZiC,GAYhBL,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAE,KAAKb;AAArC,OAApB;AACH,KAfgC;AAAA;;AAkBjCc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAEX,KAAK,IAAI,KAAKK,cAAL,CAAoBL,KAApB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,IAHtB;AAII,MAAA,QAAQ,EAAEF,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,CADJ,CADJ;AAkBH;;AArCgC;;AAsCpC;;AAED,MAAMY,kBAAkB,GAAGJ,QAAQ,IAAI;AACnC,SAAO;AACHK,IAAAA,OAAO,EAAEC,QAAQ,IAAIN,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,OAAO,EAAEI;AAA5B,KAAD;AAD1B,GAAP;AAGH,CAJD;;AAKA,eAAenB,OAAO,CAAC,IAAD,CAAP,CAAgBC,YAAhB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentInput extends Component {\n    state = {\n        comment: ''\n    };\n    \n\n    handleOnChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleOnSubmit = event => {\n        event.preventDefault()\n        this.props.dispatch({ type: 'ADD_COMMENT', payload: this.state });\n    };\n\n\n    render() {\n        return(\n            <div className=\"form\">\n                <form onSubmit={event => this.handleOnSubmit(event)} >\n\n                    <p>\n                    <label> Add Comment </label>\n                        <input\n                            type=\"text\"\n                            name=\"comment\"\n                            value={this.state.text}\n                            onChange={event => this.handleOnChange(event)}\n                        />\n                    </p>\n                    <button>Add Comment</button>\n\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addSong: formData => dispatch({type: 'ADD_SONG', payload: formData})\n    };\n};\nexport default connect(null, )(CommentInput)"]},"metadata":{},"sourceType":"module"}