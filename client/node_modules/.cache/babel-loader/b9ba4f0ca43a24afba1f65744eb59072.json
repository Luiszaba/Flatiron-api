{"ast":null,"code":"import _objectSpread from \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport cuid from 'cuid';\nimport { combineReducers } from 'redux';\nexport const cuidFn = cuid;\nconst rootReducer = combineReducers({\n  songs: songsReducer,\n  c\n});\nexport default function manageSongs(state = {\n  songs: [],\n  comments: []\n}, action) {\n  switch (action.type) {\n    case 'ADD_SONG':\n      const song = {\n        text: action.text,\n        id: cuidFn()\n      };\n      return _objectSpread({}, state, {\n        songs: [...state.songs, song]\n      });\n\n    case 'DELETE_SONG':\n      const songs = state.songs.filter(song => song.id !== action.id);\n      return _objectSpread({}, state, {\n        songs\n      });\n\n    case 'ADD_COMMENT':\n      const comment = {\n        text: action.text,\n        id: cuidFn()\n      };\n      return _objectSpread({}, state, {\n        comments: [...state.comment, comment]\n      });\n\n    case 'REMOVE_COMMENT':\n      const comments = state.comments.filter(comment => comment.id !== action.id);\n      return _objectSpread({}, state, {\n        comments\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs.js"],"names":["cuid","combineReducers","cuidFn","rootReducer","songs","songsReducer","c","manageSongs","state","comments","action","type","song","text","id","filter","comment"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,eAAR,QAA+B,OAA/B;AACA,OAAO,MAAMC,MAAM,GAAGF,IAAf;AAEP,MAAMG,WAAW,GAAGF,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAAEC,YADyB;AAEhCC,EAAAA;AAFgC,CAAD,CAAnC;AAKA,eAAe,SAASC,WAAT,CAAsBC,KAAK,GAAG;AAEzCJ,EAAAA,KAAK,EAAE,EAFkC;AAGzCK,EAAAA,QAAQ,EAAE;AAH+B,CAA9B,EAKXC,MALW,EAKH;AACR,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAK,UAAL;AACI,YAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAAf;AAAqBC,QAAAA,EAAE,EAAEZ,MAAM;AAA/B,OAAb;AACA,+BAAWM,KAAX;AACIJ,QAAAA,KAAK,EAAE,CAAE,GAAGI,KAAK,CAACJ,KAAX,EAAkBQ,IAAlB;AADX;;AAIJ,SAAK,aAAL;AACI,YAAMR,KAAK,GAAGI,KAAK,CAACJ,KAAN,CAAYW,MAAZ,CAAmBH,IAAI,IACjCA,IAAI,CAACE,EAAL,KAAYJ,MAAM,CAACI,EADT,CAAd;AAEA,+BAAYN,KAAZ;AAAmBJ,QAAAA;AAAnB;;AAEJ,SAAK,aAAL;AACI,YAAMY,OAAO,GAAG;AAACH,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,QAAAA,EAAE,EAAEZ,MAAM;AAA9B,OAAhB;AACA,+BAAWM,KAAX;AACIC,QAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACQ,OAAV,EAAmBA,OAAnB;AADd;;AAGJ,SAAK,gBAAL;AACI,YAAMP,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeM,MAAf,CAAsBC,OAAO,IAC1CA,OAAO,CAACF,EAAR,KAAeJ,MAAM,CAACI,EADT,CAAjB;AAEA,+BAAWN,KAAX;AAAkBC,QAAAA;AAAlB;;AAEA;AACA,aAAOD,KAAP;AAxBJ;AA0BH","sourcesContent":["import cuid from 'cuid';\nimport {combineReducers } from 'redux';\nexport const cuidFn = cuid;\n\nconst rootReducer = combineReducers({\n    songs: songsReducer,\n    c\n})\n\nexport default function manageSongs( state = {\n    \n    songs: [],\n    comments: [],\n\n},  action) {\n    switch (action.type) {\n\n    case 'ADD_SONG':\n        const song = { text: action.text, id: cuidFn() }\n        return {...state, \n            songs: [ ...state.songs, song ] \n        }\n\n    case 'DELETE_SONG':\n        const songs = state.songs.filter(song => \n            song.id !== action.id)\n        return { ...state, songs }\n\n    case 'ADD_COMMENT':\n        const comment = {text: action.text, id: cuidFn() }\n        return {...state,\n            comments: [...state.comment, comment]}\n    \n    case 'REMOVE_COMMENT':\n        const comments = state.comments.filter(comment => \n            comment.id !== action.id)\n        return {...state, comments }\n\n        default: \n        return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}