{"ast":null,"code":"var _jsxFileName = \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/SongsContainer.js\";\nimport React, { Component } from 'react';\nimport SongInput from '../components/songs/SongInput';\nimport Songs from '../components/songs/Songs';\nimport { fetchSongs } from '../actions/SongActions';\nimport { connect } from 'react-redux';\n\nclass SongsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchSongs();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"SongsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(SongInput, {\n      addSong: this.props.addSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Songs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Songs, {\n      songs: this.props.songs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    songs: state.songs\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addSong: song => dispatch({\n    type: \"ADD_SONG\",\n    name\n  }),\n  fetchSongs: () => {\n    dispatch(fetchSongs());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsContainer);","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/containers/SongsContainer.js"],"names":["React","Component","SongInput","Songs","fetchSongs","connect","SongsContainer","componentDidMount","props","render","addSong","songs","mapStateToProps","state","mapDispatchToProps","dispatch","song","type","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAEnCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AAGDK,EAAAA,MAAM,GAAG;AACL,WACA;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,EAKQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CADA;AAWH;;AAnBkC;;AAsBvC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAACF,IAAAA,KAAK,EAAEE,KAAK,CAACF;AAAd,GAAP;AACH,CAFD;;AAIA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,OAAO,EAAEM,IAAI,IAAID,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA;AAAnB,GAAD,CADW;AAEpCd,EAAAA,UAAU,EAAE,MAAM;AAAEW,IAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AAAwB;AAFR,CAAL,CAAnC;;AAMA,eAAeC,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport SongInput from '../components/songs/SongInput';\nimport Songs from '../components/songs/Songs';\nimport { fetchSongs } from '../actions/SongActions'\nimport { connect } from 'react-redux';\n\nclass SongsContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchSongs()\n    }\n    \n\n    render() {\n        return(\n        <div className =\"SongsContainer\">\n                <div className=\"SongInput\">\n                    <SongInput addSong={this.props.addSong} />\n                </div>\n                \n                <div className=\"Songs\">\n                    <Songs songs={this.props.songs} />\n                </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {songs: state.songs }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addSong: song => dispatch({type: \"ADD_SONG\", name }),\n    fetchSongs: () => { dispatch(fetchSongs()) }\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsContainer)\n\n"]},"metadata":{},"sourceType":"module"}