{"ast":null,"code":"import _objectSpread from \"/home/luiszaba/code/Final Project/flatiron-react-redux/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nexport const cuidFn = cuid;\nconst rootReducer = combineReducers({\n  songs: songsReducer,\n  comments: commentsReducer\n});\nexport default rootReducer;\n\nfunction songsReducer(state = [], action) {\n  let idx;\n\n  switch (action.type) {\n    case \"ADD_SONG\":\n      return [...state, action.song];\n\n    case \"DELETE_SONG\":\n      idx = state.indexOf(action.id);\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\n\n    default:\n      return state;\n  }\n}\n\nfunction commentsReducer(state = [], action) {\n  let idx;\n\n  switch (action.type) {\n    case 'ADD_COMMENT':\n      const comment = {\n        text: action.text,\n        id: cuidFn()\n      };\n      return _objectSpread({}, state, {\n        comments: [...state.comment, comment]\n      });\n\n    case 'REMOVE_COMMENT':\n      const comments = state.comments.filter(comment => comment.id !== action.id);\n      return _objectSpread({}, state, {\n        comments\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/luiszaba/code/Final Project/flatiron-react-redux/client/src/reducers/manageSongs.js"],"names":["combineReducers","cuidFn","cuid","rootReducer","songs","songsReducer","comments","commentsReducer","state","action","idx","type","song","indexOf","id","slice","comment","text","filter"],"mappings":";AAAA,SAAQA,eAAR,QAA+B,OAA/B;AACA,OAAO,MAAMC,MAAM,GAAGC,IAAf;AAEP,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,KAAK,EAAEC,YADyB;AAEhCC,EAAAA,QAAQ,EAAEC;AAFsB,CAAD,CAAnC;AAKA,eAAeJ,WAAf;;AAEA,SAASE,YAAT,CAAuBG,KAAK,GAAG,EAA/B,EAAmCC,MAAnC,EAA2C;AACvC,MAAIC,GAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEA,SAAK,UAAL;AACI,aAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACG,IAAlB,CAAP;;AAEJ,SAAK,aAAL;AACIF,MAAAA,GAAG,GAAGF,KAAK,CAACK,OAAN,CAAcJ,MAAM,CAACK,EAArB,CAAN;AACA,aAAO,CAAE,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,GAAf,CAAL,EAA0B,GAAGF,KAAK,CAACO,KAAN,CAAYL,GAAG,GAAE,CAAjB,CAA7B,CAAP;;AACJ;AACI,aAAOF,KAAP;AATJ;AAWH;;AAED,SAASD,eAAT,CAAyBC,KAAK,GAAE,EAAhC,EAAoCC,MAApC,EAA4C;AACxC,MAAIC,GAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AACA,SAAK,aAAL;AACI,YAAMK,OAAO,GAAG;AAACC,QAAAA,IAAI,EAAER,MAAM,CAACQ,IAAd;AAAoBH,QAAAA,EAAE,EAAEb,MAAM;AAA9B,OAAhB;AACA,+BAAWO,KAAX;AACIF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACQ,OAAV,EAAmBA,OAAnB;AADd;;AAGJ,SAAK,gBAAL;AACI,YAAMV,QAAQ,GAAGE,KAAK,CAACF,QAAN,CAAeY,MAAf,CAAsBF,OAAO,IAC1CA,OAAO,CAACF,EAAR,KAAeL,MAAM,CAACK,EADT,CAAjB;AAEA,+BAAWN,KAAX;AAAkBF,QAAAA;AAAlB;;AAEA;AACA,aAAOE,KAAP;AAZJ;AAcH","sourcesContent":["import {combineReducers } from 'redux';\nexport const cuidFn = cuid;\n\nconst rootReducer = combineReducers({\n    songs: songsReducer,\n    comments: commentsReducer\n});\n\nexport default rootReducer\n\nfunction songsReducer( state = [], action) {\n    let idx;\n    \n    switch (action.type) {\n\n    case \"ADD_SONG\":\n        return [...state, action.song ];\n\n    case \"DELETE_SONG\":\n        idx = state.indexOf(action.id);\n        return [ ...state.slice(0, idx), ...state.slice(idx +1 )]\n    default:\n        return state\n    }\n}\n\nfunction commentsReducer(state =[], action ){\n    let idx;\n\n    switch(action.type) {\n    case 'ADD_COMMENT':\n        const comment = {text: action.text, id: cuidFn() }\n        return {...state,\n            comments: [...state.comment, comment]}\n    \n    case 'REMOVE_COMMENT':\n        const comments = state.comments.filter(comment => \n            comment.id !== action.id)\n        return {...state, comments }\n\n        default: \n        return state\n    }\n}"]},"metadata":{},"sourceType":"module"}